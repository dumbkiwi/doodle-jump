(()=>{"use strict";class t{constructor(){this.isRunning=!1,this.timeOutID=void 0,this.callback=void 0,this.step=this.step.bind(this)}step(t){var e;null===(e=this.callback)||void 0===e||e.call(this,t),this.isRunning&&(this.timeOutID=window.requestAnimationFrame(this.step))}start(t){this.isRunning?console.warn("RequestAnimationFrame: start() called while already running"):(this.callback=t,this.timeOutID=window.requestAnimationFrame(this.step),this.isRunning=!0)}stop(){this.isRunning&&this.timeOutID?(window.cancelAnimationFrame(this.timeOutID),this.timeOutID=void 0,this.isRunning=!1):console.warn("RequestAnimationFrame: stop() called while not running")}destroy(){this.stop(),this.callback=void 0}}class e{constructor(){this._listeners={}}addListener(t,e,i){var s;this._listeners[t]=null!==(s=this._listeners[t])&&void 0!==s?s:[],this._listeners[t].push({once:i.once,callback:e})}removeListener(t,e){const i=this._listeners[t].findIndex((t=>t.callback===e));if(-1===i)throw new Error("Listener not found");this._listeners[t].splice(i,1)}on(t,e){this.addListener(t,e,{once:!1})}once(t,e){this.addListener(t,e,{once:!0})}off(t,e){this.removeListener(t,e)}emit(t,...e){this.invoke(t,...e)}invoke(t,...e){var i;for(const s of null!==(i=this._listeners[t])&&void 0!==i?i:[])s.callback(...e),s.once&&this.removeListener(t,s.callback)}}class i{}class s extends i{get type(){return"Transform"}constructor(t){super();const e=Object.assign({position:{x:0,y:0},size:{x:0,y:0},rotation:0,scale:{x:1,y:1},anchor:{x:0,y:0},init:void 0,start:void 0,update:void 0,destroy:void 0},t);this.localPosition=e.position,this.localSize=e.size,this.localRotation=e.rotation,this.localScale=e.scale,this.anchor=e.anchor,this._startFn=e.start,this._updateFn=e.update,this._destroyFn=e.destroy}static toLocalSpace(t,e){const{x:i,y:s}=t,{x:o,y:n}=e.localPosition,{x:r,y:a}=e.localScale,{x:l,y:h}=e.anchor;return{x:(i-o)/r-l,y:(s-n)/a-h}}static toWorldSpace(t,e){const{x:i,y:s}=t,{x:o,y:n}=e.localPosition,{x:r,y:a}=e.localScale,{x:l,y:h}=e.anchor;return{x:(i+l)*r+o,y:(s+h)*a+n}}get gameObject(){return this._gameObject}set gameObject(t){this._gameObject=t}get worldPosition(){return this.getWorldPosition(this.localPosition)}get width(){return this.localSize.x}set width(t){this.localSize.x=t}get height(){return this.localSize.y}set height(t){this.localSize.y=t}get scaleX(){return this.localScale.x}set scaleX(t){this.localScale.x=t}get scaleY(){return this.localScale.y}set scaleY(t){this.localScale.y=t}get anchorX(){return this.anchor.x}set anchorX(t){this.anchor.x=t}get anchorY(){return this.anchor.y}set anchorY(t){this.anchor.y=t}init(t){this.gameObject=t}start(){void 0!==this._startFn&&this._startFn()}update(t){void 0!==this._updateFn&&this._updateFn(t)}destroy(){void 0!==this._destroyFn&&this._destroyFn()}toLocalSpace(t){return s.toLocalSpace(t,this)}toWorldSpace(t){return s.toWorldSpace(t,this)}getWorldPosition(t){var e;if(void 0===(null===(e=this.gameObject)||void 0===e?void 0:e.parent))return this.localPosition;const i=this.gameObject.parent.transform;if(void 0===i)return console.warn("Tried to get world position of game object with undefined transform"),this.localPosition;const o=i.getWorldPosition(t);return s.toWorldSpace(o,this)}}class o{get components(){return this._components}set components(t){this._components=t}get game(){return this._game}set game(t){this._game=t}get transform(){return void 0===this._transform&&(this._transform=this.getComponent("Transform")),this._transform}set transform(t){this._transform=t}get parent(){return this._parent}set parent(t){this._parent=t}get children(){return this._children}set children(t){this._children=t}constructor(t){var e,i;this._components=[],this._game=void 0,this._parent=void 0,this._children=[],this._parent=null==t?void 0:t.parent,(null==t?void 0:t.parent)&&(null==t||t.parent.children.push(this)),this._components=null!==(e=null==t?void 0:t.components)&&void 0!==e?e:[];const o=this._components.find((t=>"Transform"===t.type));void 0===o?(this._transform=new s,this._components.push(this._transform)):(this._transform=o,this._transform.gameObject=this),this.children=null!==(i=null==t?void 0:t.children)&&void 0!==i?i:[],this.children.forEach((t=>{t.parent=this})),this.init=this.init.bind(this),this.start=this.start.bind(this),this.update=this.update.bind(this),this.getColliders=this.getColliders.bind(this),this.getComponent=this.getComponent.bind(this),this.addComponent=this.addComponent.bind(this),this.removeComponent=this.removeComponent.bind(this)}init(t){this.game=t;for(const t of this.components)t.init(this);for(const e of this.children)e.init(t);t.events.on("start",this.start),t.events.on("update",this.update)}start(){for(const t of this.children)t.start();for(const t of this.components)t.start()}update(t){for(const e of this.children)e.update(t);for(const e of this.components)e.update(t)}addComponent(t){this.components.push(t)}removeComponent(t){const e=this.components.indexOf(t);-1!==e&&this.components.splice(e,1)}getComponent(t){const e=this.components.find((e=>e.type===t));if(e)return e;for(const e of this.children){const i=e.getComponent(t);if(i)return i}}getComponents(t){return[...this.components.filter((e=>e.type===t)),...this.children.flatMap((e=>e.getComponents(t)))]}getColliders(){return this.getComponents("Collider")}addGameObject(t){this.children.push(t),t.parent=this}removeGameObject(t){const e=this.children.indexOf(t);-1!==e&&this.children.splice(e,1)}}class n extends i{get type(){return this._type}get gameObject(){return this._gameObject}set gameObject(t){this._gameObject=t}constructor(t){super(),this._type="Label",this._gameObject=void 0,this.config=Object.assign({text:"Sample Text",color:"black",size:"12px",fontFamily:"Arial"},t)}render(t){var e,i,s,o;this._gameObject?this._gameObject.transform?(t.fillStyle=null!==(e=this.config.color)&&void 0!==e?e:"black",t.font=`${null!==(i=this.config.size)&&void 0!==i?i:"12px"} ${null!==(s=this.config.fontFamily)&&void 0!==s?s:"Arial"}`,t.fillText(null!==(o=this.config.text)&&void 0!==o?o:"Sample Text",this._gameObject.transform.worldPosition.x,this._gameObject.transform.worldPosition.y)):console.error("Label.render: transform is undefined"):console.error("Label.render: gameObject is undefined")}init(t){this._gameObject=t}start(){}update(t){var e;this._gameObject?this.render(null===(e=this._gameObject.game)||void 0===e?void 0:e.context):console.error("Label.update: gameObject is undefined")}destroy(){}}const r={x:400,y:600},a=new o({components:[new s({position:{x:20,y:r.y-20},rotation:0,scale:{x:1,y:1}}),new n({text:"a/d or ← → to move.",color:"black",size:"16px",fontFamily:"Consolas"})]});class l extends i{constructor(t){var e,i,s;super(),this._type="SpriteRenderer",this._gameObject=void 0,this.size=null!==(e=t.size)&&void 0!==e?e:{x:1,y:1},this.baseColor=null!==(i=t.baseColor)&&void 0!==i?i:"white",this.image=null!==(s=t.image)&&void 0!==s?s:null,this.render=this.render.bind(this),this.drawImage=this.drawImage.bind(this),this.drawRectangle=this.drawRectangle.bind(this)}get type(){return this._type}get gameObject(){return this._gameObject}set gameObject(t){this._gameObject=t}render(t){this.image?this.drawImage(t):this.drawRectangle(t)}destroy(){}init(t){this._gameObject=t}start(){}update(t){var e;this._gameObject?this.render(null===(e=this._gameObject.game)||void 0===e?void 0:e.context):console.error("SpriteRenderer.update: gameObject is undefined")}drawImage(t){this._gameObject?this._gameObject.transform?this.image?t.drawImage(this.image,this._gameObject.transform.worldPosition.x,this._gameObject.transform.worldPosition.y,this.size.x*this._gameObject.transform.localScale.x,this.size.y*this._gameObject.transform.localScale.y):console.error("SpriteRenderer.drawImage: image is undefined"):console.error("SpriteRenderer.render: gameObject.transform is undefined"):console.error("SpriteRenderer.render: gameObject is undefined")}drawRectangle(t){this._gameObject?this._gameObject.transform?(t.fillStyle=this.baseColor,t.fillRect(this._gameObject.transform.worldPosition.x,this._gameObject.transform.worldPosition.y,this.size.x*this._gameObject.transform.localScale.x,this.size.y*this._gameObject.transform.localScale.y)):console.error("SpriteRenderer.render: gameObject.transform is undefined"):console.error("SpriteRenderer.render: gameObject is undefined")}}const h=new o({components:[new s({position:{x:0,y:0},rotation:0,scale:{x:1,y:1}}),new l({size:{x:1e3,y:1e3},baseColor:"white"})]}),c=new o({components:[new s({position:{x:r.x-160,y:40},rotation:0,scale:{x:1,y:1}}),new n({text:"Doodle Jump",color:"black",size:"24px",fontFamily:"Consolas"})]}),d=new o({components:[new s({position:{x:r.x-80,y:r.y-20},rotation:0,scale:{x:1,y:1}}),new class extends n{constructor(t){super(Object.assign(Object.assign({},t),{text:"FPS: 0"})),this.fps=0,this.lastTime=0,this.frameCount=0}init(t){super.init(t),this.lastTime=performance.now()}update(t){this.frameCount++;const e=performance.now(),i=e-this.lastTime;i>1e3&&(this.fps=Math.round(1e3*this.frameCount/i),this.config.text=`FPS: ${this.fps}`,this.frameCount=0,this.lastTime=e),super.update(t)}}({color:"black",size:"16px",fontFamily:"Consolas"})]});class m extends i{constructor(){super(...arguments),this._type="Collider"}get type(){return this._type}static getAllColliders(t){return t.gameObjects.map((t=>t.getColliders())).flat()}}class g extends m{get x(){return this._x}set x(t){this._x=t}get y(){return this._y}set y(t){this._y=t}get width(){return this._width}set width(t){this._width=t}get height(){return this._height}set height(t){this._height=t}get right(){return this._x+this._width}set right(t){this._x=t-this._width}get left(){return this._x}set left(t){this._x=t}get top(){return this._y}set top(t){this._y=t}get bottom(){return this._y+this._height}set bottom(t){this._y=t-this._height}get centerX(){return this._x+this._width/2}set centerX(t){this._x=t-this._width/2}get centerY(){return this._y+this._height/2}set centerY(t){this._y=t-this._height/2}get halfWidth(){return this._width/2}set halfWidth(t){this._width=2*t}get halfHeight(){return this._height/2}set halfHeight(t){this._height=2*t}get collidingColliders(){return this._collidingWith}get velocity(){return this._velocity}set velocity(t){this._velocity=t}get tag(){return this._tag}set tag(t){this._tag=t}constructor(t){super(),this._tag="Default",this._collidingWith=[],this._velocity={x:0,y:0},this._x=t.x,this._y=t.y,this._width=t.width,this._height=t.height,this._tag=t.tag,this._eventManager=new e,this._callbacks={collisionEnter:t.onCollisionEnter?[t.onCollisionEnter]:[],collisionExit:t.onCollisionExit?[t.onCollisionExit]:[],collisionStay:t.onCollisionStay?[t.onCollisionStay]:[]},this.onCollisionEnter=this.onCollisionEnter.bind(this),this.onCollisionExit=this.onCollisionExit.bind(this),this.onCollisionStay=this.onCollisionStay.bind(this)}collide(t){return t instanceof g&&this.collideRectangle(t)}isPointInCollider(t,e){return t>=this.left&&t<=this.right&&e>=this.top&&e<=this.bottom}on(t,e){this._callbacks[t].push(e)}off(t,e){this._callbacks[t]=this._callbacks[t].filter((t=>t!==e))}onCollisionEnter(t){this._callbacks.collisionEnter.forEach((e=>{e(t)}))}onCollisionExit(t){this._callbacks.collisionExit.forEach((e=>{e(t)}))}onCollisionStay(t){this._callbacks.collisionStay.forEach((e=>{e(t)}))}collideRectangle(t){return this.left<t.right&&this.right>t.left&&this.top<t.bottom&&this.bottom>t.top}get gameObject(){return this._gameObject}set gameObject(t){this._gameObject=t}init(t){this._gameObject=t,this._eventManager.on("collisionEnter",this.onCollisionEnter),this._eventManager.on("collisionExit",this.onCollisionExit),this._eventManager.on("collisionStay",this.onCollisionStay)}start(){}update(t){if(!this._gameObject||void 0===this._gameObject)return void console.error("Collider does not have a gameObject");if(!this._gameObject.game||void 0===this._gameObject.game)return void console.error("Collider does not have a game");const e=this._gameObject.transform;if(!e||void 0===e)return;this._x=e.worldPosition.x,this._y=e.worldPosition.y;const i=m.getAllColliders(this._gameObject.game);for(const t of i)t!==this&&(this.collide(t)&&(this._collidingWith.includes(t)?this._eventManager.emit("collisionStay",t):(this._collidingWith.push(t),this._eventManager.emit("collisionEnter",t))),this.collide(t)||this._collidingWith.includes(t)&&(this._collidingWith.splice(this._collidingWith.indexOf(t),1),this._eventManager.emit("collisionExit",t)))}destroy(){this._eventManager.off("collisionEnter",this.onCollisionEnter),this._eventManager.off("collisionExit",this.onCollisionExit),this._eventManager.off("collisionStay",this.onCollisionStay)}}const p=new g({tag:"Player",x:0,y:0,width:50,height:50}),f=new l({size:{x:50,y:50},baseColor:"red"}),u=new class extends o{constructor(t){super(),this.speed=t.speed,this.gravity=t.gravity,this.friction=t.friction,this.collider=t.groundCollider,this.addComponent(this.collider),this.control={left:!1,right:!1}}start(){super.start(),document.addEventListener("keydown",this.onKeyDown.bind(this)),document.addEventListener("keyup",this.onKeyUp.bind(this))}update(t){if(void 0===this.transform)return void console.error("Player: transform is undefined");let e=0;this.control.left&&(e-=1),this.control.right&&(e+=1),this.transform.localPosition.x+=e*this.speed/t,this.collider.velocity.y+=this.gravity/t,this.collider.velocity.y/=this.friction,this.transform.localPosition.y+=this.collider.velocity.y,super.update(t)}onKeyDown(t){"ArrowLeft"===t.key?this.control.left=!0:"ArrowRight"===t.key&&(this.control.right=!0),"a"===t.key?this.control.left=!0:"d"===t.key&&(this.control.right=!0)}onKeyUp(t){"ArrowLeft"===t.key?this.control.left=!1:"ArrowRight"===t.key&&(this.control.right=!1),"a"===t.key?this.control.left=!1:"d"===t.key&&(this.control.right=!1)}}({size:{x:1,y:1},speed:80,gravity:2,friction:1,groundCollider:p}),y=u.getComponent("Transform");if(!y)throw new Error("Player must have a transform");y.localPosition.x=r.x/2-p.width/2,y.localPosition.y=r.y/2-p.height/2,u.addComponent(f);class w extends o{constructor(t){super(),this.transform.localPosition.x=t.x,this.transform.localPosition.y=t.y;const e=new l({size:{x:t.width,y:t.height},baseColor:t.color}),i=new g({tag:"Platform",x:0,y:0,width:t.width,height:t.height,onCollisionEnter:e=>{var i,s;"Player"===e.tag&&e.velocity.y>0&&(e.y=this.transform.worldPosition.y+t.height/2,e.velocity.y=-t.bounciness,null===(i=t.scrollView)||void 0===i||i.setScrollDistance(-this.transform.worldPosition.y+r.y-t.height-(null!==(s=t.scrollViewPadding)&&void 0!==s?s:0)))}});this.components=this.components.concat([e,i])}}const b=new o({components:[new g({tag:"Ceiling",x:0,y:-r.y,width:r.x,height:r.y/6})]}),_=new class extends o{constructor(t){super(),this.config=t}init(t){this.scrollDistance=0,this.config.ceilingObject.getComponent("Collider").on("collisionEnter",(t=>{if("Player"===t.tag){const e=Math.abs(t.y-this.config.viewportSize.y/2);this.addScrollDistance(e)}})),super.init(t)}update(t){super.update(t),this.transform&&(this.transform.localPosition.y+=this.scrollDistance*this.config.smoothing,this.scrollDistance*=1-this.config.smoothing)}addScrollDistance(t){this.scrollDistance+=t}getScrollDistance(){return this.scrollDistance}setScrollDistance(t){this.scrollDistance=t}getSmoothing(){return this.config.smoothing}}({smoothing:.07,playerCollider:u.getComponent("Collider"),ceilingObject:b,viewportSize:{x:r.x,y:r.y}}),x={scrollView:_,scrollViewPadding:50,x:0,y:0,color:"black",width:100,height:20,bounciness:8};[u,new w(Object.assign(Object.assign({},x),{x:r.x/2-50,y:r.y/2+200})),new w(Object.assign(Object.assign({},x),{x:r.x/2-150,y:r.y/2})),new w(Object.assign(Object.assign({},x),{x:r.x/2+50,y:r.y/2-200})),new w(Object.assign(Object.assign({},x),{x:r.x/2-100,y:r.y/2-400}))].forEach((t=>{_.addGameObject(t)}));const v=new o({components:[new s({position:{x:0,y:-240}}),new g({tag:"PlatformSpawner",x:0,y:-240,width:r.x-100,height:240})]}),O=new o({components:[new s({position:{x:0,y:r.y+100}}),new g({tag:"PlatformSpawner",x:0,y:r.y,width:r.x,height:r.y}),new l({baseColor:"red",size:{x:r.x,y:r.y}})]}),j=new class extends o{constructor(t){super(),this.platformPool=[],this.spawnedPlatforms=[],this.spawnParentObject=t.spawnParentObject,this.platformTemplate=t.platformTemplate,this.minimumDistanceBetweenPlatforms=t.minimumDistanceBetweenPlatforms,this.minimunNumberOfPlatforms=t.minimunNumberOfPlatforms,this.scrollViewObject=t.scrollViewObject;const e=t.spawnColliderObject.getComponent("Collider");if(!e)throw new Error("Spawn collider object must have a collider component");this.spawnCollider=e,e.on("collisionExit",(t=>{const i=e.collidingColliders.filter((t=>"Platform"===t.tag)).length;i<this.minimunNumberOfPlatforms&&this.spawnPlatforms(this.minimunNumberOfPlatforms-i)}));const i=t.destroyColliderObject.getComponent("Collider");if(!i)throw new Error("Destroy collider object must have a collider component");i.on("collisionEnter",(t=>{"Platform"===t.tag&&this.recyclePlatform(t.gameObject)}))}start(){super.start(),this.spawnPlatforms()}spawnPlatforms(t=1){const e=[this.spawnCollider.left-this.scrollViewObject.transform.localPosition.x,this.spawnCollider.right-this.scrollViewObject.transform.localPosition.x],i=[this.spawnCollider.top-this.scrollViewObject.transform.localPosition.y,this.spawnCollider.bottom-this.scrollViewObject.transform.localPosition.y];for(let s=0,o=0;s<100&&o<t;s++){const t={x:Math.random()*(e[1]-e[0])+e[0],y:Math.random()*(i[1]-i[0])+i[0]};this.isOverlappingWithOtherPlatforms(t)||(this.createPlatform(t),o++)}this.platformPool.length<t-1&&console.warn("Failed to spawn platform due to max spawn attempt reached")}createPlatform(t){if(!this.game)return void console.warn("Game is not set on platform spawner");const e=0===this.platformPool.length?new w(this.platformTemplate):this.platformPool.pop();e.init(this.game),e.transform.localPosition.x=t.x,e.transform.localPosition.y=t.y,this.spawnedPlatforms.push(e),this.spawnParentObject.addGameObject(e)}recyclePlatform(t){this.spawnedPlatforms.includes(t)&&(this.tryDisconnectPlatformFromParent(t),this.platformPool.push(t))}tryDisconnectPlatformFromParent(t){var e;t.parent&&(null===(e=t.parent)||void 0===e||e.removeGameObject(t),t.parent=void 0)}isOverlappingWithOtherPlatforms(t){return this.spawnedPlatforms.forEach((e=>{const i=e.getComponent("Collider");return!!i.isPointInCollider(t.x-this.minimumDistanceBetweenPlatforms,t.y-this.minimumDistanceBetweenPlatforms)||!!i.isPointInCollider(t.x+this.platformTemplate.width-this.minimumDistanceBetweenPlatforms,t.y-this.minimumDistanceBetweenPlatforms)||!!i.isPointInCollider(t.x+this.minimumDistanceBetweenPlatforms,t.y+this.platformTemplate.height+this.minimumDistanceBetweenPlatforms)||!!i.isPointInCollider(t.x+this.platformTemplate.width+this.minimumDistanceBetweenPlatforms,t.y+this.platformTemplate.height+this.minimumDistanceBetweenPlatforms)||void 0})),!1}}({scrollViewObject:_,spawnParentObject:_,spawnColliderObject:v,destroyColliderObject:O,platformTemplate:x,minimumDistanceBetweenPlatforms:50,minimunNumberOfPlatforms:1}),C=new o({components:[new s({position:{x:20,y:40}}),new class extends n{constructor(t,e){super(e),this.scrollViewObject=t}update(t){super.update(t),this.config.text=`Score: ${Math.floor(Math.round(this.scrollViewObject.transform.localPosition.y/100))}`}}(_,{color:"black",size:"24px",fontFamily:"Consolas"})]}),P=new class{get gameObjects(){return this._gameObjects}constructor(i,s){var o;this.runtimeEventManager=new e,this.runtimeEventManager.on("error",(t=>{console.trace(`Game stopped be cause of a fatal: ${t}. Stack trace:`),this.stop()})),this.events=new e,this.raf=new t,this.hasInitialized=!1,this._gameObjects=i,this.canvas=this.initCanvas(null!=s?s:{x:0,y:0}),this.context=this.canvas.getContext("2d"),this.start=this.start.bind(this),this.update=this.update.bind(this),this.stop=this.stop.bind(this),this.destroy=this.destroy.bind(this),null===(o=document.getElementById("game"))||void 0===o||o.appendChild(this.canvas)}init(){this.hasInitialized||(this.hasInitialized=!0,this._gameObjects.forEach((t=>{t.init(this)})))}start(){this.hasInitialized||console.error("Game has not been initialized"),this.events.emit("start"),this.raf.start(this.update),this.lastFrameTime=performance.now()}update(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height);const t=performance.now(),e=t-this.lastFrameTime;this.lastFrameTime=t,this.events.emit("update",e)}stop(){this.events.emit("stop"),this.raf.stop()}destroy(){this.events.emit("destroy"),this.raf.destroy()}initCanvas(t){const e=document.createElement("canvas");return e.width=t?t.x:window.innerWidth,e.height=t?t.y:window.innerHeight,e}}([h,a,c,d,C,_,j,v,O,b],r);P.init(),P.start()})();